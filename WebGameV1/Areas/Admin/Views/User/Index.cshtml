@model IEnumerable<WebGameV1.Models.ApplicationUser>


<!DOCTYPE html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />   
    <link rel="stylesheet" href="~/assets/css/data-tables/data-tables.css" />
</head>
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h4>Danh  sách tài khoản người dùng</h4>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="User" asp-action="Upsert" class="btn btn-primary"><i class="fas fa-plus"></i> Import User</a>
        </div>
    </div>

    <table class="table table-bordered table-striped mt-3" id="tblData">
        <thead>
            <tr> <th>STT</th>           
                <th>Email</th>
                <th>Tên</th>
                <th>Vai trò</th>
                <th>Thời gian đănng kí</th>
                <th>Hành động</th>
            </tr>
        </thead>
    </table>
</div>

@section Scripts {
    <partial name="_Notification" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/vendors/data-tables/data-tables.js"></script>
    <script>
        var dataTable;

        $(document).ready(function () {
            loadDatatable();
        });

        function loadDatatable() {
            dataTable = $('#tblData').DataTable({
                "ajax": {
                    "url": "/api/admin/users",
                    "type": "GET",
                    "dataSrc": function (json) {
                        console.log('API Response:', json);
                        return json.data;
                    }
                },
                "columns": [
                    {
                        "data": null,
                        "render": function (data, type, row, meta) {
                            return meta.row + 1;
                        },
                        "width": "5%"
                    },
                    { "data": "userName", "width": "15%" },
                    { "data": "name", "width": "15%" },
                    { "data": "roleName", "width": "15%" },
                    { "data": "registrationDate", "width": "15%" },
                    {
                        "data": "id",
                        "render": function (data, type, row) {
                         
                            let isLocked = row.lockoutEnd !== null && new Date(row.lockoutEnd) > new Date();

                            return `
                                <div>
                                     <a href="/Admin/User/Upsert?id=${data}" class="btn btn-warning btn-sm " >
                                     <i class="fas fa-user-edit"></i> Edit
                                     </a>

                                    <a href="javascript:void(0)"
                                    onclick="Lock('/api/admin/users/lock?id=${data}')"
                                    class="btn btn-danger btn-sm ${isLocked ? 'disabled' : ''}">
                                    <i class="fas fa-user-lock"></i> Lock
                                    </a>

                                    <a href="javascript:void(0)"
                                    onclick="UnLock('/api/admin/users/unlock?id=${data}')"
                                    class="btn btn-success btn-sm ${!isLocked ? 'disabled' : ''}">
                                    <i class="fas fa-unlock"></i> Unlock
                                    </a>
                                </div>`;
                        },
                        "width": "15%"
                    }
                ]
            });
        }



        function Lock(url) {
            Swal.fire({
                title: "Bạn có chắc không?",
                text: "Hành động này sẽ khóa tài khoản người dùng!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Có, khóa nó!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: "POST",
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (data) {
                            if (data.success) {
                                toastr.success(data.message);
                                dataTable.ajax.reload();
                            } else {
                                toastr.error(data.message);
                            }
                        }
                    });
                }
            });
        }

        function UnLock(url) {
            Swal.fire({
                title: "Bạn có chắc không?",
                text: "Hành động này sẽ mở tài khoản người dùng!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Có, mở nó!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: "POST",
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (data) {
                            if (data.success) {
                                toastr.success(data.message);
                                dataTable.ajax.reload();
                            } else {
                                toastr.error(data.message);
                            }
                        }
                    });
                }
            });
        }

    </script>
}
